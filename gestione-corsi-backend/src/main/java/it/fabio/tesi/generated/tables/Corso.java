/*
 * This file is generated by jOOQ.
 */
package it.fabio.tesi.generated.tables;


import it.fabio.tesi.generated.Gestionecorsi;
import it.fabio.tesi.generated.Indexes;
import it.fabio.tesi.generated.Keys;
import it.fabio.tesi.generated.tables.records.CorsoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Corso extends TableImpl<CorsoRecord> {

    private static final long serialVersionUID = 1808403645;

    /**
     * The reference instance of <code>gestionecorsi.corso</code>
     */
    public static final Corso CORSO = new Corso();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CorsoRecord> getRecordType() {
        return CorsoRecord.class;
    }

    /**
     * The column <code>gestionecorsi.corso.idcorso</code>.
     */
    public final TableField<CorsoRecord, Integer> IDCORSO = createField(DSL.name("idcorso"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>gestionecorsi.corso.codice</code>.
     */
    public final TableField<CorsoRecord, String> CODICE = createField(DSL.name("codice"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>gestionecorsi.corso.ssd</code>.
     */
    public final TableField<CorsoRecord, String> SSD = createField(DSL.name("ssd"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>gestionecorsi.corso.denominazione</code>.
     */
    public final TableField<CorsoRecord, String> DENOMINAZIONE = createField(DSL.name("denominazione"), org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>gestionecorsi.corso.codicemutuazione</code>.
     */
    public final TableField<CorsoRecord, String> CODICEMUTUAZIONE = createField(DSL.name("codicemutuazione"), org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>gestionecorsi.corso.cfu</code>.
     */
    public final TableField<CorsoRecord, Integer> CFU = createField(DSL.name("cfu"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>gestionecorsi.corso.numstudenti</code>.
     */
    public final TableField<CorsoRecord, Integer> NUMSTUDENTI = createField(DSL.name("numstudenti"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>gestionecorsi.corso.oretotali</code>.
     */
    public final TableField<CorsoRecord, Integer> ORETOTALI = createField(DSL.name("oretotali"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>gestionecorsi.corso.parametro</code>.
     */
    public final TableField<CorsoRecord, String> PARAMETRO = createField(DSL.name("parametro"), org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>gestionecorsi.corso.anno</code>.
     */
    public final TableField<CorsoRecord, String> ANNO = createField(DSL.name("anno"), org.jooq.impl.SQLDataType.VARCHAR(25).nullable(false), this, "");

    /**
     * The column <code>gestionecorsi.corso.periodo</code>.
     */
    public final TableField<CorsoRecord, Integer> PERIODO = createField(DSL.name("periodo"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>gestionecorsi.corso.dipartimento_iddipartimento</code>.
     */
    public final TableField<CorsoRecord, Integer> DIPARTIMENTO_IDDIPARTIMENTO = createField(DSL.name("dipartimento_iddipartimento"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>gestionecorsi.corso</code> table reference
     */
    public Corso() {
        this(DSL.name("corso"), null);
    }

    /**
     * Create an aliased <code>gestionecorsi.corso</code> table reference
     */
    public Corso(String alias) {
        this(DSL.name(alias), CORSO);
    }

    /**
     * Create an aliased <code>gestionecorsi.corso</code> table reference
     */
    public Corso(Name alias) {
        this(alias, CORSO);
    }

    private Corso(Name alias, Table<CorsoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Corso(Name alias, Table<CorsoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Corso(Table<O> child, ForeignKey<O, CorsoRecord> key) {
        super(child, key, CORSO);
    }

    @Override
    public Schema getSchema() {
        return Gestionecorsi.GESTIONECORSI;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CORSO_CORSO_UNIQUE, Indexes.CORSO_FK_CORSO_DIPARTIMENTO1_IDX, Indexes.CORSO_PRIMARY);
    }

    @Override
    public Identity<CorsoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CORSO;
    }

    @Override
    public UniqueKey<CorsoRecord> getPrimaryKey() {
        return Keys.KEY_CORSO_PRIMARY;
    }

    @Override
    public List<UniqueKey<CorsoRecord>> getKeys() {
        return Arrays.<UniqueKey<CorsoRecord>>asList(Keys.KEY_CORSO_PRIMARY, Keys.KEY_CORSO_CORSO_UNIQUE);
    }

    @Override
    public List<ForeignKey<CorsoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CorsoRecord, ?>>asList(Keys.FK_CORSO_DIPARTIMENTO1);
    }

    public Dipartimento dipartimento() {
        return new Dipartimento(this, Keys.FK_CORSO_DIPARTIMENTO1);
    }

    @Override
    public Corso as(String alias) {
        return new Corso(DSL.name(alias), this);
    }

    @Override
    public Corso as(Name alias) {
        return new Corso(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Corso rename(String name) {
        return new Corso(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Corso rename(Name name) {
        return new Corso(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, String, String, String, String, Integer, Integer, Integer, String, String, Integer, Integer> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
