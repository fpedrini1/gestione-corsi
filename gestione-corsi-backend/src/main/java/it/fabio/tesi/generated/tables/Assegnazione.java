/*
 * This file is generated by jOOQ.
 */
package it.fabio.tesi.generated.tables;


import it.fabio.tesi.generated.Gestionecorsi;
import it.fabio.tesi.generated.Indexes;
import it.fabio.tesi.generated.Keys;
import it.fabio.tesi.generated.enums.AssegnazioneContratto;
import it.fabio.tesi.generated.enums.AssegnazioneTipologia;
import it.fabio.tesi.generated.tables.records.AssegnazioneRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Assegnazione extends TableImpl<AssegnazioneRecord> {

    private static final long serialVersionUID = -1427393890;

    /**
     * The reference instance of <code>gestionecorsi.assegnazione</code>
     */
    public static final Assegnazione ASSEGNAZIONE = new Assegnazione();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssegnazioneRecord> getRecordType() {
        return AssegnazioneRecord.class;
    }

    /**
     * The column <code>gestionecorsi.assegnazione.idassegnazione</code>.
     */
    public final TableField<AssegnazioneRecord, Integer> IDASSEGNAZIONE = createField(DSL.name("idassegnazione"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>gestionecorsi.assegnazione.docente_iddocente</code>.
     */
    public final TableField<AssegnazioneRecord, Integer> DOCENTE_IDDOCENTE = createField(DSL.name("docente_iddocente"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>gestionecorsi.assegnazione.corso_idcorso</code>.
     */
    public final TableField<AssegnazioneRecord, Integer> CORSO_IDCORSO = createField(DSL.name("corso_idcorso"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>gestionecorsi.assegnazione.contratto</code>.
     */
    public final TableField<AssegnazioneRecord, AssegnazioneContratto> CONTRATTO = createField(DSL.name("contratto"), org.jooq.impl.SQLDataType.VARCHAR(7).nullable(false).asEnumDataType(it.fabio.tesi.generated.enums.AssegnazioneContratto.class), this, "");

    /**
     * The column <code>gestionecorsi.assegnazione.tipologia</code>.
     */
    public final TableField<AssegnazioneRecord, AssegnazioneTipologia> TIPOLOGIA = createField(DSL.name("tipologia"), org.jooq.impl.SQLDataType.VARCHAR(13).nullable(false).asEnumDataType(it.fabio.tesi.generated.enums.AssegnazioneTipologia.class), this, "");

    /**
     * The column <code>gestionecorsi.assegnazione.ore</code>.
     */
    public final TableField<AssegnazioneRecord, Integer> ORE = createField(DSL.name("ore"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>gestionecorsi.assegnazione</code> table reference
     */
    public Assegnazione() {
        this(DSL.name("assegnazione"), null);
    }

    /**
     * Create an aliased <code>gestionecorsi.assegnazione</code> table reference
     */
    public Assegnazione(String alias) {
        this(DSL.name(alias), ASSEGNAZIONE);
    }

    /**
     * Create an aliased <code>gestionecorsi.assegnazione</code> table reference
     */
    public Assegnazione(Name alias) {
        this(alias, ASSEGNAZIONE);
    }

    private Assegnazione(Name alias, Table<AssegnazioneRecord> aliased) {
        this(alias, aliased, null);
    }

    private Assegnazione(Name alias, Table<AssegnazioneRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Assegnazione(Table<O> child, ForeignKey<O, AssegnazioneRecord> key) {
        super(child, key, ASSEGNAZIONE);
    }

    @Override
    public Schema getSchema() {
        return Gestionecorsi.GESTIONECORSI;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ASSEGNAZIONE_ASSEGNAZIONE_UNIQUE, Indexes.ASSEGNAZIONE_FK_DOCENTE_HAS_CORSO_CORSO1_IDX, Indexes.ASSEGNAZIONE_FK_DOCENTE_HAS_CORSO_DOCENTE1_IDX, Indexes.ASSEGNAZIONE_PRIMARY);
    }

    @Override
    public Identity<AssegnazioneRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ASSEGNAZIONE;
    }

    @Override
    public UniqueKey<AssegnazioneRecord> getPrimaryKey() {
        return Keys.KEY_ASSEGNAZIONE_PRIMARY;
    }

    @Override
    public List<UniqueKey<AssegnazioneRecord>> getKeys() {
        return Arrays.<UniqueKey<AssegnazioneRecord>>asList(Keys.KEY_ASSEGNAZIONE_PRIMARY);
    }

    @Override
    public List<ForeignKey<AssegnazioneRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AssegnazioneRecord, ?>>asList(Keys.FK_DOCENTE_HAS_CORSO_DOCENTE1, Keys.FK_DOCENTE_HAS_CORSO_CORSO1);
    }

    public Docente docente() {
        return new Docente(this, Keys.FK_DOCENTE_HAS_CORSO_DOCENTE1);
    }

    public Corso corso() {
        return new Corso(this, Keys.FK_DOCENTE_HAS_CORSO_CORSO1);
    }

    @Override
    public Assegnazione as(String alias) {
        return new Assegnazione(DSL.name(alias), this);
    }

    @Override
    public Assegnazione as(Name alias) {
        return new Assegnazione(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Assegnazione rename(String name) {
        return new Assegnazione(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Assegnazione rename(Name name) {
        return new Assegnazione(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, Integer, AssegnazioneContratto, AssegnazioneTipologia, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
