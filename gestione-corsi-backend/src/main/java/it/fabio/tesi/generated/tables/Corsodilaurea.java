/*
 * This file is generated by jOOQ.
 */
package it.fabio.tesi.generated.tables;


import it.fabio.tesi.generated.Gestionecorsi;
import it.fabio.tesi.generated.Indexes;
import it.fabio.tesi.generated.Keys;
import it.fabio.tesi.generated.tables.records.CorsodilaureaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Corsodilaurea extends TableImpl<CorsodilaureaRecord> {

    private static final long serialVersionUID = 1132380312;

    /**
     * The reference instance of <code>gestionecorsi.corsodilaurea</code>
     */
    public static final Corsodilaurea CORSODILAUREA = new Corsodilaurea();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CorsodilaureaRecord> getRecordType() {
        return CorsodilaureaRecord.class;
    }

    /**
     * The column <code>gestionecorsi.corsodilaurea.idcorsodilaurea</code>.
     */
    public final TableField<CorsodilaureaRecord, Integer> IDCORSODILAUREA = createField(DSL.name("idcorsodilaurea"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>gestionecorsi.corsodilaurea.denominazione</code>.
     */
    public final TableField<CorsodilaureaRecord, String> DENOMINAZIONE = createField(DSL.name("denominazione"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>gestionecorsi.corsodilaurea.codice</code>.
     */
    public final TableField<CorsodilaureaRecord, String> CODICE = createField(DSL.name("codice"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false).defaultValue(org.jooq.impl.DSL.inline("Non Assegnato", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>gestionecorsi.corsodilaurea.anno</code>.
     */
    public final TableField<CorsodilaureaRecord, String> ANNO = createField(DSL.name("anno"), org.jooq.impl.SQLDataType.VARCHAR(25).nullable(false), this, "");

    /**
     * Create a <code>gestionecorsi.corsodilaurea</code> table reference
     */
    public Corsodilaurea() {
        this(DSL.name("corsodilaurea"), null);
    }

    /**
     * Create an aliased <code>gestionecorsi.corsodilaurea</code> table reference
     */
    public Corsodilaurea(String alias) {
        this(DSL.name(alias), CORSODILAUREA);
    }

    /**
     * Create an aliased <code>gestionecorsi.corsodilaurea</code> table reference
     */
    public Corsodilaurea(Name alias) {
        this(alias, CORSODILAUREA);
    }

    private Corsodilaurea(Name alias, Table<CorsodilaureaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Corsodilaurea(Name alias, Table<CorsodilaureaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Corsodilaurea(Table<O> child, ForeignKey<O, CorsodilaureaRecord> key) {
        super(child, key, CORSODILAUREA);
    }

    @Override
    public Schema getSchema() {
        return Gestionecorsi.GESTIONECORSI;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CORSODILAUREA_PRIMARY);
    }

    @Override
    public Identity<CorsodilaureaRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CORSODILAUREA;
    }

    @Override
    public UniqueKey<CorsodilaureaRecord> getPrimaryKey() {
        return Keys.KEY_CORSODILAUREA_PRIMARY;
    }

    @Override
    public List<UniqueKey<CorsodilaureaRecord>> getKeys() {
        return Arrays.<UniqueKey<CorsodilaureaRecord>>asList(Keys.KEY_CORSODILAUREA_PRIMARY);
    }

    @Override
    public Corsodilaurea as(String alias) {
        return new Corsodilaurea(DSL.name(alias), this);
    }

    @Override
    public Corsodilaurea as(Name alias) {
        return new Corsodilaurea(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Corsodilaurea rename(String name) {
        return new Corsodilaurea(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Corsodilaurea rename(Name name) {
        return new Corsodilaurea(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
